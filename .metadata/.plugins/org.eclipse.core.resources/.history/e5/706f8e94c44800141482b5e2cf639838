package process;
import java.util.Iterator;

import client.AbstractClient;
import client.ClientQueue;
import client.haveStopWatch;



public class ClientTimeChecker implements Runnable {
	ClientSender clientSender;
	
	public ClientTimeChecker(ClientSender clientSender) {
		this.clientSender = clientSender;
	}
	int currentTime = 0;
	ClientQueue clientQueue = new ClientQueue();
	boolean isLive = true;
	
	@Override
	public void run() {
	
		while(isLive) {
			
		
			Iterator<AbstractClient> it = clientQueue.getList().iterator();
			while (it.hasNext()) {

				AbstractClient client = it.next();
				if(client.getArrivalTime() == currentTime) {
					clientSender.sendClientToStation(client);	
					System.out.println(client.getName() + "님이 " + client.getArrivalTime() 
							+ "초가 되서 역에 도착하셨습니다.");	
				}
			}
			
			currentTime++;
			if (currentTime > SIMULATION_TIME) {
				console(clientQueue);
				isLive = false;
			}
			
			try {
				Thread.sleep(1000); //1초마다
			} catch ( InterruptedException e) {}
			System.out.println("-");
			
		}
		
	}
	
	public void console(haveStopWatch hsw) {
		hsw.print();
	}
}
